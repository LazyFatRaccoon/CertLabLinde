const nodemailer = require("nodemailer");
const validator = require("validator");

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

/**
 * –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ email.
 * @param {Object} opts
 * @param {string} opts.to      - Email –æ—Ç—Ä–∏–º—É–≤–∞—á–∞
 * @param {string} opts.subject - –¢–µ–º–∞ –ª–∏—Å—Ç–∞
 * @param {string} opts.text    - –¢–µ–∫—Å—Ç–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞
 * @param {string} [opts.html]  - (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) HTML-–≤–µ—Ä—ñ—è
 **/

const sendEmailObj = async ({ to, subject, text, html }) => {
  try {
    /* 1Ô∏è‚É£  –±–∞–∑–æ–≤–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∞–¥—Ä–µ—Å–∏ */
    if (!validator.isEmail(to || "")) {
      throw new Error(`Invalid recipient email: '${to}'`);
    }

    /* 2Ô∏è‚É£  –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ */
    const info = await transporter.sendMail({
      from: `CertLab <${process.env.EMAIL_USER}>`,
      to,
      subject,
      text,
      html,
    });

    console.log(`üìß Email '${subject}' sent to ${to} (${info.messageId})`);
    return info;
  } catch (error) {
    console.error("‚ùå Email sending failed:", error.message);
    throw error; // –ø—Ä–æ–∫–∏–¥—É—î–º–æ –¥–∞–ª—ñ, —â–æ–± —Ä–æ—É—Ç –ø–æ–≤–µ—Ä–Ω—É–≤ 500/400
  }
};

const sendEmail = (to, subject, text, html) =>
  sendEmailObj({ to, subject, text, html });

module.exports = { sendEmail };
